
#h2 database

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.username=sa (by default)
#spring.datasource.password= (by default)

#
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#
#spring.jpa.show-sql=true (it shows the which sql code used behind the scene)
#spring.h2.console.enabled=true  (it shows the end point on the console for connecting the h2 database )
#spring.h2.console.path=/sgnal (we can assign our endpoint to the h2 database)


#postgres database

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#to execute data.sql and schema.sql first before everything.when we work with H2 database do that by default
#spring.sql.init.mode=always


#DDL operations
#When we create our table by entity classes every time we start the app
# , we are going to get exception because this table is going to be created
# in DB. To avoid this exception we use ddl operations(create,validate,create-drop,update)

#create : drops the table and then creates again
spring.jpa.hibernate.ddl-auto=create

#To create table with entity classes first before data.sql
spring.jpa.defer-datasource-initialization=true
